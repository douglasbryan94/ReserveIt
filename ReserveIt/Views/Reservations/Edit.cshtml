@model ReserveIt.Models.Reservation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminMasterLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br />
        <h4>Reservation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReservationID)
<<<<<<< Updated upstream

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomID, "RoomID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomID, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckIn, new { htmlAttributes = new {@readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StayLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StayLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StayLength, "", new { @class = "text-danger" })
            </div>
        </div>
=======
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.RoomID)
        @Html.HiddenFor(model => model.CheckIn)
        @Html.HiddenFor(model => model.StayLength)
>>>>>>> Stashed changes

        <div class="form-group">
            @Html.LabelFor(model => model.CheckOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NightlyRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NightlyRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NightlyRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
<<<<<<< Updated upstream
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "ReservationManagement", "Admin", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}
=======
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
>>>>>>> Stashed changes
